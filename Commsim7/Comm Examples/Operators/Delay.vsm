; VisSim Block Diagram Format (VBDF)
; Copyright ©1989-1999 Visual Solutions
POa="Eugene"
PV=4.500
PS=0
PE=1
PP=2.5e-005
PI=170
PX=2.5e-005
PN=1e-006
PL=5
PT=1e-005
Pn=-8,6,14,"Arial"
Pc=26
Po=1,50,664,0
Ppl=0
Ppp=0
Ppt=0
Ppf=1
Pe=0
PD=1024x768
Pf=0x0
Ps=2048,0,0,3840,0,0
PM=1,1,1,1
Qn="viscomm.dll"
QLi[4]=1
0
1
0
N.1="userFunction"*58x12#3,4<U>
n="viscomm.complexFFT"
DP=168
DLi[8]=12
0
0
0
1
1
0
0
DLF[1]=0
DLi[1]=4
DLs[2]="0."
"4"
N.2="userFunction"*1x18#1,2<U>
n="viscomm.randomSym"
DP=88
DLi[2]=4
0
DLF[3]=1800
0
0.000555555555555556
DLs[3]="4"
"1800"
"0."
N.3="userFunction"*54x3#0,1<RU>
n="viscomm.impulse"
DP=48
DLF[2]=0
1
DLs[2]=0
0
N.4="plot"*85x7*70x33<c>
pt="Complex FFT of Real Signal"
px="Time (sec)"
py="Power Spectrum (dBm)"
pax=2
pf=S
pf=x
pf=F
pb=1,-70
pbx=20,-20
pbY=0,0
pbX=0,0
pm=-1,0
pb.0=0,-70
pb.1=0,0
pb.2=20000,-20000
pL.2="Frequency (kHz)"
pb.3=0,0
pb.4=0,0
pb.5=0,0
pb.6=0,0
pb.7=0,0
N.5="plot"*85x40*70x33<c>
pt="Complex FFT of Complex Signal"
px="Time (sec)"
py="Power Spectrum (dBm)"
pax=2
pf=S
pf=x
pf=F
pb=1,-70
pbx=20,-20
pbY=0,0
pbX=4096,0
pc=4096
pm=-1,0
pb.0=0,-300
pb.1=0,0
pb.2=20,-20
pL.2="Frequency (kHz)"
pb.3=0,0
pb.4=0,0
pb.5=0,0
pb.6=0,0
pb.7=0,0
N.6="label"*2x2
n="DELAY BLOCK EXAMPLE"
Ob=8454143
Og=255
Of=-16,0,400,0,1,0,34,"Arial",0,2
N.7="label"*61x49
n="  Complex FFT
(Complex Input)
   4 averages"
N.8="label"*65x21
n="Complex FFT
 (Real Input)
 4 averages"
N.9="label"*20x22
n="Carrier:       5 kHz
Data Rate:  1.8 ksps"
N.10="label"*4x72
n="- The time delay implemented by the block can be specified either as a
  number of simulation steps, or as time in seconds.

- In this case   64 sim steps  ==  1.6 msec"
Ob=8454143
Og=255
N.11="label"*4x58
n="Notes:
- The Delay block is used in this example to synchronize the Real and Imaginary
  parts of a complex signal being generated by taking the Hilbert transform of a
  real input signal (the Hilbert FIR output has a fixed delay)."
Ob=8454143
Og=255
N.12="userFunction"*20x17#1,2<U>
n="viscomm.pskModRe"
DP=232
DLF[4]=5000
1
0
0
DLi[1]=1
DLc[128]="psk_gray.dat"
DLF[2]=0
0
DLs[5]="5000"
"1."
"0."
"0."
"0."
N.13="userFunction"*9x40#1,1<U>
n="viscomm.FIRfilter"
DP=168
DLi[4]=129
6
0
0
DLF[4]=1
2
0
1
DLi[1]=1
DLF[1]=40000
DLi[1]=0
DLs[6]="129"
"1."
"2."
"0."
"1."
"40000."
N.14="userFunction"*20x36#1,1<U>
n="viscomm.delay"
DP=96
DLI[1]=64
DLF[1]=0
DLi[1]=0
DLF[1]=1
DLs[3]="64"
"0."
0
N.15="wirePositioner"*37x32<R>
N.16="userFunction"*55x30#1,1<U>
n="viscomm.delay"
DP=96
DLI[1]=64
DLF[1]=0
DLi[1]=1
DLF[1]=0.0016
DLs[3]="64"
"0."
"0.0016"
N.17="label"*37x14
n="Real Signal"
N.18="label"*9x46
n="FIR Filter delay is:
(N - 1) / 2  =  (129 - 1) / 2
= 64 sim steps"
Ob=8454143
Og=255
N.19="userFunction"*38x44#2,1<U>
n="viscomm.reImCpx"
N.20="userFunction"*55x40#2,4<UT11>
n="viscomm.spectrum"
DP=136
DLi[8]=12
0
0
1
1
1
0
0
DLF[1]=0
DLi[1]=4
DLs[2]="0."
"4"
DLi[1]=1
N.21="label"*61x9
n="Complex FFT Block"
N.22="label"*57x36
n="Spectrum Analyzer Block"
N.23="wirePositioner"*52x33<R>
N.24="label"*2x7
n="The complex version of this block works exactly
the same, except that it accepts a complex input."
Ob=8454143
Og=255
N.25="label"*91x76
n="A Hilbert transform can be used to attenuate all negative frequencies"
Ob=8454143
Og=255
N.26="label"*4x67
n="- A Delay block is also being used to delay the FFT trigger pulse so that the
  data interval for the FFT takes the Hilbert FIR delay into account. "
Ob=8454143
Og=255
I.1.i1=3.o1
I.1.i2=12.o1
I.4.i1=1.o2
I.4.i3=1.o4
I.4.i0=1.o1
f5.1.i=v
I.5.i1=20.o2
f5.3.i=v
I.5.i3=20.o4
I.5.i0=20.o1
I.12.i1=2.o1
I.13.i1=12.o1
I.14.i1=15.o1
I.15.i1=12.o1
I.16.i1=3.o1
f19.1.o=v
I.19.i1=14.o1
I.19.i2=13.o1
f20.2.o=v
f20.3.o=v
f20.4.o=v
I.20.i1=23.o1
f20.2.i=v
I.20.i2=19.o1
I.23.i1=16.o1
cEOF
